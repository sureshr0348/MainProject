<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="16" total="55" passed="38" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-10-11T14:48:14 IST" name="Smoke" finished-at="2021-10-11T14:58:34 IST" duration-ms="620835">
    <groups>
    </groups>
    <test started-at="2021-10-11T14:48:14 IST" name="smoke" finished-at="2021-10-11T14:58:34 IST" duration-ms="620835">
      <class name="com.defects.tests.SortAndSearchTest">
        <test-method is-config="true" signature="openDefect()[pri:0, instance:com.defects.tests.SortAndSearchTest@548a24a]" started-at="2021-10-11T14:57:59 IST" name="openDefect" finished-at="2021-10-11T14:57:59 IST" duration-ms="15" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openDefect -->
        <test-method signature="sortTest()[pri:0, instance:com.defects.tests.SortAndSearchTest@548a24a]" started-at="2021-10-11T14:57:59 IST" name="sortTest" finished-at="2021-10-11T14:58:29 IST" duration-ms="30520" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"/html/body/div[13]/div[2]/div/div[2]/div/div/a[1]/span/span/span[2]"}
  (Session info: MicrosoftEdge=94.0.992.38)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'LTIN219977', ip: '10.175.207.234', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.1'
Driver info: org.openqa.selenium.edge.EdgeDriver
Capabilities {acceptInsecureCerts: false, browserName: msedge, browserVersion: 94.0.992.38, javascriptEnabled: true, ms:edgeOptions: {debuggerAddress: localhost:55508}, msedge: {msedgedriverVersion: 94.0.992.38 (55a0a486d5c4c1..., userDataDir: C:\Users\922137\AppData\Loc...}, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 45f2387ba879a426fd50254ceb92014a
*** Element info: {Using=xpath, value=/html/body/div[13]/div[2]/div/div[2]/div/div/a[1]/span/span/span[2]}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"/html/body/div[13]/div[2]/div/div[2]/div/div/a[1]/span/span/span[2]"}
  (Session info: MicrosoftEdge=94.0.992.38)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'LTIN219977', ip: '10.175.207.234', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.1'
Driver info: org.openqa.selenium.edge.EdgeDriver
Capabilities {acceptInsecureCerts: false, browserName: msedge, browserVersion: 94.0.992.38, javascriptEnabled: true, ms:edgeOptions: {debuggerAddress: localhost:55508}, msedge: {msedgedriverVersion: 94.0.992.38 (55a0a486d5c4c1..., userDataDir: C:\Users\922137\AppData\Loc...}, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 45f2387ba879a426fd50254ceb92014a
*** Element info: {Using=xpath, value=/html/body/div[13]/div[2]/div/div[2]/div/div/a[1]/span/span/span[2]}
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at com.defects.tests.SortAndSearchTest.sort(SortAndSearchTest.java:46)
at com.defects.tests.SortAndSearchTest.sortTest(SortAndSearchTest.java:97)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sortTest -->
        <test-method signature="searchTest()[pri:2, instance:com.defects.tests.SortAndSearchTest@548a24a]" started-at="2021-10-11T14:58:29 IST" name="searchTest" finished-at="2021-10-11T14:58:34 IST" duration-ms="5033" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchTest -->
      </class> <!-- com.defects.tests.SortAndSearchTest -->
      <class name="com.defects.tests.AddDefectTest">
        <test-method is-config="true" signature="before()[pri:0, instance:com.defects.tests.AddDefectTest@302c971f]" started-at="2021-10-11T14:48:37 IST" name="before" finished-at="2021-10-11T14:48:37 IST" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method signature="openAddDefectPage()[pri:1, instance:com.defects.tests.AddDefectTest@302c971f]" started-at="2021-10-11T14:48:37 IST" name="openAddDefectPage" finished-at="2021-10-11T14:48:42 IST" duration-ms="5456" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openAddDefectPage -->
        <test-method signature="fillDetails()[pri:2, instance:com.defects.tests.AddDefectTest@302c971f]" started-at="2021-10-11T14:48:42 IST" name="fillDetails" finished-at="2021-10-11T14:49:39 IST" duration-ms="56770" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fillDetails -->
      </class> <!-- com.defects.tests.AddDefectTest -->
      <class name="com.defects.tests.AttachmentsTest">
        <test-method is-config="true" signature="openDefect()[pri:0, instance:com.defects.tests.AttachmentsTest@7ae0a9ec]" started-at="2021-10-11T14:50:42 IST" name="openDefect" finished-at="2021-10-11T14:51:03 IST" duration-ms="20493" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openDefect -->
        <test-method signature="attachmentsTabNavigate()[pri:1, instance:com.defects.tests.AttachmentsTest@7ae0a9ec]" started-at="2021-10-11T14:51:03 IST" name="attachmentsTabNavigate" finished-at="2021-10-11T14:51:35 IST" duration-ms="31819" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- attachmentsTabNavigate -->
        <test-method signature="test(java.util.Hashtable)[pri:2, instance:com.defects.tests.AttachmentsTest@7ae0a9ec]" started-at="2021-10-11T14:51:36 IST" name="test" data-provider="fileUploadData" finished-at="2021-10-11T14:51:36 IST" duration-ms="91" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{FileName=uploadCheck.bmp, Format=BMP}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method signature="test(java.util.Hashtable)[pri:2, instance:com.defects.tests.AttachmentsTest@7ae0a9ec]" started-at="2021-10-11T14:51:36 IST" name="test" data-provider="fileUploadData" finished-at="2021-10-11T14:51:36 IST" duration-ms="72" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{FileName=uploadCheck.doc, Format=DOC}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method signature="test(java.util.Hashtable)[pri:2, instance:com.defects.tests.AttachmentsTest@7ae0a9ec]" started-at="2021-10-11T14:51:36 IST" name="test" data-provider="fileUploadData" finished-at="2021-10-11T14:51:38 IST" duration-ms="1753" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{FileName=uploadCheck.docx, Format=DOCX}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method signature="test(java.util.Hashtable)[pri:2, instance:com.defects.tests.AttachmentsTest@7ae0a9ec]" started-at="2021-10-11T14:51:38 IST" name="test" data-provider="fileUploadData" finished-at="2021-10-11T14:51:38 IST" duration-ms="52" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{FileName=uploadCheck.jpeg, Format=JPEG}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method signature="test(java.util.Hashtable)[pri:2, instance:com.defects.tests.AttachmentsTest@7ae0a9ec]" started-at="2021-10-11T14:51:38 IST" name="test" data-provider="fileUploadData" finished-at="2021-10-11T14:51:39 IST" duration-ms="1376" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{FileName=uploadCheck.jpg, Format=JPG}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method signature="test(java.util.Hashtable)[pri:2, instance:com.defects.tests.AttachmentsTest@7ae0a9ec]" started-at="2021-10-11T14:51:39 IST" name="test" data-provider="fileUploadData" finished-at="2021-10-11T14:51:40 IST" duration-ms="764" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{FileName=uploadCheck.png, Format=PNG}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method signature="test(java.util.Hashtable)[pri:2, instance:com.defects.tests.AttachmentsTest@7ae0a9ec]" started-at="2021-10-11T14:51:40 IST" name="test" data-provider="fileUploadData" finished-at="2021-10-11T14:51:41 IST" duration-ms="822" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{FileName=uploadCheck.ppt, Format=PPT}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method signature="test(java.util.Hashtable)[pri:2, instance:com.defects.tests.AttachmentsTest@7ae0a9ec]" started-at="2021-10-11T14:51:41 IST" name="test" data-provider="fileUploadData" finished-at="2021-10-11T14:51:41 IST" duration-ms="64" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{FileName=uploadCheck.pptx, Format=PPTX}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method signature="test(java.util.Hashtable)[pri:2, instance:com.defects.tests.AttachmentsTest@7ae0a9ec]" started-at="2021-10-11T14:51:41 IST" name="test" data-provider="fileUploadData" finished-at="2021-10-11T14:51:42 IST" duration-ms="1465" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{FileName=uploadCheck.txt, Format=TXT}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method signature="test(java.util.Hashtable)[pri:2, instance:com.defects.tests.AttachmentsTest@7ae0a9ec]" started-at="2021-10-11T14:51:42 IST" name="test" data-provider="fileUploadData" finished-at="2021-10-11T14:51:43 IST" duration-ms="77" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{FileName=uploadCheck.xls, Format=XLS}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method signature="test(java.util.Hashtable)[pri:2, instance:com.defects.tests.AttachmentsTest@7ae0a9ec]" started-at="2021-10-11T14:51:43 IST" name="test" data-provider="fileUploadData" finished-at="2021-10-11T14:51:44 IST" duration-ms="1414" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{FileName=uploadCheck.xlsm, Format=XLSM}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method signature="test(java.util.Hashtable)[pri:2, instance:com.defects.tests.AttachmentsTest@7ae0a9ec]" started-at="2021-10-11T14:51:44 IST" name="test" data-provider="fileUploadData" finished-at="2021-10-11T14:51:44 IST" duration-ms="73" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{FileName=uploadCheck.xlsx, Format=XLSX}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method signature="singleAttachmentDelete()[pri:3, instance:com.defects.tests.AttachmentsTest@7ae0a9ec]" started-at="2021-10-11T14:51:44 IST" name="singleAttachmentDelete" finished-at="2021-10-11T14:51:59 IST" duration-ms="14491" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- singleAttachmentDelete -->
        <test-method signature="allAttachmentDelete()[pri:4, instance:com.defects.tests.AttachmentsTest@7ae0a9ec]" started-at="2021-10-11T14:51:59 IST" name="allAttachmentDelete" finished-at="2021-10-11T14:52:04 IST" duration-ms="5514" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allAttachmentDelete -->
      </class> <!-- com.defects.tests.AttachmentsTest -->
      <class name="com.defects.tests.TableViewTest">
        <test-method is-config="true" signature="openDefect()[pri:0, instance:com.defects.tests.TableViewTest@1040be71]" started-at="2021-10-11T14:57:47 IST" name="openDefect" finished-at="2021-10-11T14:57:47 IST" duration-ms="274" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openDefect -->
        <test-method signature="createInvalidTable()[pri:1, instance:com.defects.tests.TableViewTest@1040be71]" started-at="2021-10-11T14:57:47 IST" name="createInvalidTable" finished-at="2021-10-11T14:57:50 IST" duration-ms="2408" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createInvalidTable -->
        <test-method signature="createValidTable()[pri:2, instance:com.defects.tests.TableViewTest@1040be71]" started-at="2021-10-11T14:57:50 IST" name="createValidTable" finished-at="2021-10-11T14:57:53 IST" duration-ms="3473" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createValidTable -->
        <test-method signature="EditTable()[pri:3, instance:com.defects.tests.TableViewTest@1040be71]" started-at="2021-10-11T14:57:53 IST" name="EditTable" finished-at="2021-10-11T14:57:59 IST" duration-ms="5429" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- EditTable -->
      </class> <!-- com.defects.tests.TableViewTest -->
      <class name="com.defects.tests.WorkFlowTest">
        <test-method is-config="true" signature="openDefect()[pri:0, instance:com.defects.tests.WorkFlowTest@61c4eee0]" started-at="2021-10-11T14:53:16 IST" name="openDefect" finished-at="2021-10-11T14:53:35 IST" duration-ms="18306" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openDefect -->
        <test-method signature="assignParticipants()[pri:1, instance:com.defects.tests.WorkFlowTest@61c4eee0]" started-at="2021-10-11T14:53:35 IST" name="assignParticipants" finished-at="2021-10-11T14:54:07 IST" duration-ms="32160" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- assignParticipants -->
        <test-method signature="RouteToPerformer()[pri:2, instance:com.defects.tests.WorkFlowTest@61c4eee0]" started-at="2021-10-11T14:54:07 IST" name="RouteToPerformer" finished-at="2021-10-11T14:54:34 IST" duration-ms="26620" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RouteToPerformer -->
        <test-method signature="RouteToApprover()[pri:3, instance:com.defects.tests.WorkFlowTest@61c4eee0]" started-at="2021-10-11T14:54:34 IST" name="RouteToApprover" finished-at="2021-10-11T14:55:56 IST" duration-ms="82240" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RouteToApprover -->
        <test-method signature="closeDefect()[pri:4, instance:com.defects.tests.WorkFlowTest@61c4eee0]" started-at="2021-10-11T14:55:56 IST" name="closeDefect" finished-at="2021-10-11T14:57:04 IST" duration-ms="67833" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeDefect -->
      </class> <!-- com.defects.tests.WorkFlowTest -->
      <class name="com.defects.tests.CommentsTest">
        <test-method is-config="true" signature="openDefect()[pri:0, instance:com.defects.tests.CommentsTest@1972e513]" started-at="2021-10-11T14:49:39 IST" name="openDefect" finished-at="2021-10-11T14:50:04 IST" duration-ms="24895" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openDefect -->
        <test-method signature="navigateToCommentsTab()[pri:1, instance:com.defects.tests.CommentsTest@1972e513]" started-at="2021-10-11T14:50:04 IST" name="navigateToCommentsTab" finished-at="2021-10-11T14:50:36 IST" duration-ms="32657" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateToCommentsTab -->
        <test-method signature="postComment()[pri:2, instance:com.defects.tests.CommentsTest@1972e513]" started-at="2021-10-11T14:50:36 IST" name="postComment" finished-at="2021-10-11T14:50:39 IST" duration-ms="3026" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postComment -->
        <test-method signature="replyComment()[pri:3, instance:com.defects.tests.CommentsTest@1972e513]" started-at="2021-10-11T14:50:39 IST" name="replyComment" finished-at="2021-10-11T14:50:42 IST" duration-ms="3042" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- replyComment -->
      </class> <!-- com.defects.tests.CommentsTest -->
      <class name="com.defects.tests.FiltersTest">
        <test-method is-config="true" signature="openDefect()[pri:0, instance:com.defects.tests.FiltersTest@6f10d5b6]" started-at="2021-10-11T14:57:04 IST" name="openDefect" finished-at="2021-10-11T14:57:12 IST" duration-ms="7978" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openDefect -->
        <test-method signature="defectHomePageFunctionalities()[pri:3, instance:com.defects.tests.FiltersTest@6f10d5b6]" started-at="2021-10-11T14:57:12 IST" name="defectHomePageFunctionalities" finished-at="2021-10-11T14:57:27 IST" duration-ms="15643" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defectHomePageFunctionalities -->
        <test-method signature="CreateInvalidFilter()[pri:4, instance:com.defects.tests.FiltersTest@6f10d5b6]" started-at="2021-10-11T14:57:27 IST" name="CreateInvalidFilter" finished-at="2021-10-11T14:57:33 IST" duration-ms="5763" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateInvalidFilter -->
        <test-method signature="CreateFilter()[pri:5, instance:com.defects.tests.FiltersTest@6f10d5b6]" started-at="2021-10-11T14:57:33 IST" name="CreateFilter" finished-at="2021-10-11T14:57:39 IST" duration-ms="6298" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateFilter -->
        <test-method signature="EditFilter()[pri:5, instance:com.defects.tests.FiltersTest@6f10d5b6]" started-at="2021-10-11T14:57:39 IST" name="EditFilter" finished-at="2021-10-11T14:57:46 IST" duration-ms="6914" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- EditFilter -->
        <test-method signature="clearFilter()[pri:6, instance:com.defects.tests.FiltersTest@6f10d5b6]" started-at="2021-10-11T14:57:46 IST" name="clearFilter" finished-at="2021-10-11T14:57:47 IST" duration-ms="1034" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clearFilter -->
      </class> <!-- com.defects.tests.FiltersTest -->
      <class name="com.defects.tests.PreviousVersionsTest">
        <test-method is-config="true" signature="openDefect()[pri:0, instance:com.defects.tests.PreviousVersionsTest@35841320]" started-at="2021-10-11T14:52:04 IST" name="openDefect" finished-at="2021-10-11T14:52:23 IST" duration-ms="18613" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openDefect -->
        <test-method signature="navigateToPreviousVersions()[pri:1, instance:com.defects.tests.PreviousVersionsTest@35841320]" started-at="2021-10-11T14:52:23 IST" name="navigateToPreviousVersions" finished-at="2021-10-11T14:52:55 IST" duration-ms="32786" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateToPreviousVersions -->
        <test-method signature="invalidVersionDifference()[pri:2, instance:com.defects.tests.PreviousVersionsTest@35841320]" started-at="2021-10-11T14:52:55 IST" name="invalidVersionDifference" finished-at="2021-10-11T14:52:58 IST" duration-ms="2712" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidVersionDifference -->
        <test-method signature="VersionDifference()[pri:3, instance:com.defects.tests.PreviousVersionsTest@35841320]" started-at="2021-10-11T14:52:58 IST" name="VersionDifference" finished-at="2021-10-11T14:53:16 IST" duration-ms="18233" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VersionDifference -->
      </class> <!-- com.defects.tests.PreviousVersionsTest -->
      <class name="com.defects.tests.LoginTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.defects.tests.LoginTest@305ffe9e]" started-at="2021-10-11T14:48:07 IST" name="setup" finished-at="2021-10-11T14:48:14 IST" duration-ms="6509" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="Login()[pri:1, instance:com.defects.tests.LoginTest@305ffe9e]" started-at="2021-10-11T14:48:14 IST" name="Login" finished-at="2021-10-11T14:48:22 IST" duration-ms="8427" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Login -->
        <test-method signature="navigateToDefectsPage()[pri:2, instance:com.defects.tests.LoginTest@305ffe9e]" started-at="2021-10-11T14:48:22 IST" name="navigateToDefectsPage" finished-at="2021-10-11T14:48:37 IST" duration-ms="14556" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateToDefectsPage -->
        <test-method is-config="true" signature="close()[pri:0, instance:com.defects.tests.LoginTest@305ffe9e]" started-at="2021-10-11T14:58:34 IST" name="close" finished-at="2021-10-11T14:58:37 IST" duration-ms="2062" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
      </class> <!-- com.defects.tests.LoginTest -->
    </test> <!-- smoke -->
  </suite> <!-- Smoke -->
</testng-results>
